name: Docker Image CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  BuildApi:
    runs-on: ubuntu-latest
    steps:
      - name: Build the Docker apserver image
      - uses: actions/checkout@v3
        env:
          ECR_API_REPOSITORY: ${{ secrets.AWS_ECR_API_REPO_NAME }}
        run: docker build -t $ECR_API_REPOSITORY:latest ./apserver

  BuildWeb:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build the Docker webserver image
        env:
          ECR_WEB_REPOSITORY: ${{ secrets.AWS_ECR_WEB_REPO_NAME }}
        run: docker build -t $ECR_WEB_REPOSITORY:latest ./apserver

  PushToEcr:
    runs-on: ubuntu-latest
    needs: [BuildApi, BuildWeb]
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET_KEY }}
          aws-region: ap-northeast-1
      - name: Login to Amazon ECR
        id: login-ecr # outputs で参照するために id を設定
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        env:
          # ECR レジストリを `aws-actions/amazon-ecr-login` アクションの `outputs.registry` から取得
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_API_REPOSITORY: ${{ secrets.AWS_ECR_API_REPO_NAME }}
          ECR_WEB_REPOSITORY: ${{ secrets.AWS_ECR_WEB_REPO_NAME }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker tag $ECR_API_REPOSITORY:latest $ECR_REGISTRY/$ECR_API_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_API_REPOSITORY:$IMAGE_TAG
          docker tag $ECR_WEB_REPOSITORY:latest $ECR_REGISTRY/$ECR_WEB_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_WEB_REPOSITORY:$IMAGE_TAG
      - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}

  Deploy:
    runs-on: ubuntu-latest
    needs: PushToEcr
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-northeast-1

      - name: ApiDeploy
        env:
          ECS_CLUSTER_NAME: ${{ secrets.ECS_CLUSTER_NAME }}
          API_SERVICE_NAME: ${{ secrets.API_SERVICE_NAME }}
        run: |
          aws ecs update-service --cluster $ECS_CLUSTER_NAME --service $API_SERVICE_NAME --force-new-deployment
      - name: WebDeploy
        env:
          ECS_CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
          WEB_SERVICE_NAME: ${{ secrets.WEB_SERVICE_NAME }}
        run: |
          aws ecs update-service --cluster $ECS_CLUSTER_NAME --service $WEB_SERVICE_NAME --force-new-deployment
